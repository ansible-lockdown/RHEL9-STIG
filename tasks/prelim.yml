---
# Preliminary tasks that should always be run
# List users in order to look files inside each home directory

- name: PRELIM | Discover Interactive UID MIN and MIN from logins.def
  tags:
    - always
  block:
    - name: PRELIM | Capture UID_MIN information from logins.def
      ansible.builtin.shell: grep -w "^UID_MIN" /etc/login.defs | awk '{print $NF}'
      changed_when: false
      register: uid_min_id

    - name: PRELIM | Capture UID_MAX information from logins.def
      ansible.builtin.shell: grep -w "^UID_MAX" /etc/login.defs | awk '{print $NF}'
      changed_when: false
      register: uid_max_id

    - name: PRELIM | Capture GID_MIN information from logins.def
      ansible.builtin.shell: grep -w "^GID_MIN" /etc/login.defs | awk '{print $NF}'
      changed_when: false
      register: gid_min_id

    - name: PRELIM | Set_facts for interactive uid/gid
      ansible.builtin.set_fact:
        min_int_uid: "{{ uid_min_id.stdout }}"
        max_int_uid: "{{ uid_max_id.stdout }}"
        min_int_gid: "{{ gid_min_id.stdout }}"

- name: PRELIM | Capture /etc/password variables
  tags:
    - always
  ansible.builtin.include_tasks:
    file: parse_etc_password.yml

- name: PRELIM | Interactive Users
  ansible.builtin.shell: "grep -Ev 'nologin|/sbin' /etc/passwd | awk -F: '$3 >= {{ min_int_uid }} {print $1}'"
  changed_when: false
  register: rhel9stig_interactive_users
  tags:
    - always

- name: Include audit specific variables
  when:
    - run_audit or audit_only
    - setup_audit
  tags:
    - setup_audit
    - run_audit
  ansible.builtin.include_vars:
    file: audit.yml

- name: Include pre-remediation audit tasks
  when:
    - run_audit or audit_only
    - setup_audit
  tags:
    - run_audit
  ansible.builtin.import_tasks:
    file: pre_remediation_audit.yml

- name: PRELIM | Interactive User account home
  ansible.builtin.shell: 'cat /etc/passwd | grep -Ev "nologin|/sbin" | cut -d: -f6'
  changed_when: false
  register: rhel9stig_interactive_users_home
  tags:
    - always

- name: PRELIM | Gather accounts with empty password fields
  when: rhel_09_611155
  ansible.builtin.shell: "cat /etc/shadow | awk -F: '($2 == \"\" ) {j++;print $1; } END {exit j}'"
  changed_when: false
  failed_when: rhel9stig_empty_password_accounts.rc not in [ 0, 1 ]
  register: rhel9stig_empty_password_accounts
  tags:
    - passwords

- name: PRELIM | Gather UID 0 accounts other than root
  ansible.builtin.shell: "cat /etc/passwd | awk -F: '($3 == 0 && $1 != \"root\") {i++;print $1 } END {exit i}'"
  changed_when: false
  check_mode: false
  register: rhel9stig_uid_zero_accounts_except_root
  tags:
    - level1-server
    - level1-workstation
    - users

- name: PRELIM | Setup crypto-policy
  when:
    - rhel_09_672030
  ansible.builtin.package:
    name:
      - crypto-policies
      - crypto-policies-scripts
    state: present
  tags:
    - cat1
    - RHEL-09-672030
    - crypto

- name: PRELIM | Create list of mount points
  ansible.builtin.set_fact:
    mount_names: "{{ ansible_mounts | map(attribute='mount') | list }}"
  tags:
    - always

- name: PRELIM | Ensure python3-libselinux is installed
  when:
    - '"python3-libselinux" not in ansible_facts.packages'
  ansible.builtin.package:
    name: python3-libselinux
    state: present

- name: PRELIM | Set facts based on boot type
  tags:
    - always
  block:
    - name: PRELIM | Check whether machine is UEFI-based
      ansible.builtin.stat:
        path: /sys/firmware/efi
      register: rhel_09_efi_boot

    - name: PRELIM | Set legacy boot and grub path | Bios
      ansible.builtin.set_fact:
        rhel9stig_legacy_boot: true
      when: not rhel_09_efi_boot.stat.exists

- name: PRELIM | Update to latest gpg keys
  ansible.builtin.package:
    name: "{{ gpg_key_package }}"
    state: latest
  when:
    - ansible_facts.distribution != 'RedHat'
    - ansible_facts.distribution != 'OracleLinux'

- name: PRELIM | Configure System Accounting (auditd)
  when:
    - '"auditd" not in ansible_facts.packages'
  ansible.builtin.package:
    name: audit
    state: present
  tags:
    - cat2
    - SRG-OS-000062-GPOS-00031
    - SRG-OS-000037-GPOS-00015
    - SRG-OS-000038-GPOS-00016
    - SRG-OS-000039-GPOS-00017
    - SRG-OS-000040-GPOS-00018
    - SRG-OS-000041-GPOS-00019
    - SRG-OS-000042-GPOS-00021
    - SRG-OS-000051-GPOS-00024
    - SRG-OS-000054-GPOS-00025
    - SRG-OS-000122-GPOS-00063
    - SRG-OS-000254-GPOS-00095
    - SRG-OS-000255-GPOS-00096
    - SRG-OS-000337-GPOS-00129
    - SRG-OS-000348-GPOS-00136
    - SRG-OS-000349-GPOS-00137
    - SRG-OS-000350-GPOS-00138
    - SRG-OS-000351-GPOS-00139
    - SRG-OS-000352-GPOS-00140
    - SRG-OS-000353-GPOS-00141
    - SRG-OS-000354-GPOS-00142
    - SRG-OS-000358-GPOS-00145
    - SRG-OS-000365-GPOS-00152
    - SRG-OS-000392-GPOS-00172
    - SRG-OS-000475-GPOS-00220
    - auditd

- name: "PRELIM | Discover auditd_logfile_path"
  when:
    - rhel_09_653085 or
      rhel_09_653085 or
      rhel_09_653090
  tags:
    - always
  ansible.builtin.shell: grep ^log_file /etc/audit/auditd.conf | awk '{ print $NF }'
  changed_when: false
  register: discovered_auditd_logfile

# Added to ensure ssh drop in file exists if not default /etc/ssh/sshd_config
- name: PRELIM | SSH | create config file if absent
  ansible.builtin.file:
    path: "{{ rhel9stig_sshd_config_file }}"
    owner: root
    group: root
    mode: 'u-x,go-rwx'
    state: touch
  when:
    - rhel9stig_sshd_config_file != '/etc/ssh/sshd_config'
    - "'openssh-server' in ansible_facts.packages"
  tags:
    - ssh

- name: PRELIM | SSH | existing ssh config files
  ansible.builtin.find:
    path: /etc/ssh
    patterns: '*.conf'
  register: prelim_sshd_config_files

- name: "PRELIM | Interactive User accounts"
  ansible.builtin.shell: 'cat /etc/passwd | grep -Ev "nologin|/sbin" | cut -d: -f6'
  changed_when: false
  register: rhel9stig_interactive_users_home
  tags:
    - always

- name: "PRELIM | Capture NetworkManager DNS state"
  when:
    - rhel_09_252035 or
      rhel_09_252040
  tags:
    - always
  ansible.builtin.shell: grep -E "dns\s*=" /etc/NetworkManager/NetworkManager.conf | cut -d = -f2 | sed s/" "//g
  changed_when: false
  failed_when: rhel9stig_network_manager_dns.rc not in [ 0, 1 ]
  register: rhel9stig_network_manager_dns

- name: PRELIM | Discover Gnome Desktop Environment
  tags:
    - always
  ansible.builtin.stat:
    path: /usr/share/gnome/gnome-version.xml
  register: rhel_09_gnome_present

- name: PRELIM | Discover dconf systemdb
  when:
    - rhel9stig_gui
  ansible.builtin.shell: grep system-db /etc/dconf/profile/user | cut -d ':' -f2
  changed_when: false
  failed_when: rhel9stig_dconf_db.rc not in [ 0, 1 ]
  register: rhel9stig_dconf_db

- name: PRELIM | Discover dconf db files
  when:
    - rhel9stig_gui
  ansible.builtin.find:
    path: /etc/dconf/db/local.d
    pattern: '*'
  register: rhel9stig_dconf_locald_files

- name: PRELIM | Find all sudoers files.
  when:
    - rhel_09_432015 or
      rhel_09_432020 or
      rhel_09_432025 or
      rhel_09_432030
  tags:
    - always
  ansible.builtin.shell: find /etc/sudoers /etc/sudoers.d/ -type f ! -name '*~' ! -name '*.*'
  changed_when: false
  failed_when: false
  check_mode: false
  register: rhel9stig_sudoers_files

- name: PRELIM | Find all pwquality files.
  when:
    - rhel_09_611100 or
      rhel_09_611060 or
      rhel_09_611065 or
      rhel_09_611070
  tags:
    - always
  ansible.builtin.shell: find /etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf
  changed_when: false
  failed_when: rhel9stig_pwquality_conf_files.rc not in [ 0, 1 ]
  check_mode: false
  register: rhel9stig_pwquality_conf_files

- name: PRELIM | Find all sssd conf files.
  when:
    - rhel_09_611170
    - rhel_09_611060
    - rhel_09_611065
    - rhel_09_611070
  tags:
    - always
  ansible.builtin.shell: find /etc/sssd/sssd.conf /etc/sssd/conf.d/*.conf
  changed_when: false
  failed_when: false
  check_mode: false
  register: rhel9stig_sssd_conf_files

- name: "PRELIM | RHEL-09-411080 | RHEL-09-411080 | RHEL-09-411090 | Setup authselect if setting allow"
  when:
    - rhel_09_411085 or rhel_09_411085 or rhel_09_411090
    - rhel9stig_authselect_custom_profile is defined
    - not rhel9stig_add_faillock_without_authselect
    - rhel9stig_disruption_high
  tags:
    - always
  block:
    - name: "PRELIM | Setup authselect if setting allow"
      ansible.builtin.shell: "authselect current | grep with-faillock"
      failed_when: false
      changed_when: false
      check_mode: false
      register: rhel9stig_authselect_profiles_faillock

    - name: "PRELIM | AUDIT | Setup authselect if setting allow"
      ansible.builtin.debug:
        msg:
          - "Below are the current custom profiles"
          - "{{ rhel9stig_authselect_profiles_faillock.stdout_lines }}"

    - name: "PRELIM | PATCH | Setup authselect if setting allow | Create custom profiles"
      ansible.builtin.shell: "authselect select custom/{{ rhel9stig_authselect['custom_profile_name'] }} with-faillock"

- name: PRELIM | Discover removable devices
  when: item.value.removable == '1'
  tags:
    - always
  ansible.builtin.set_fact:
    rhel9stig_discovered_removable_storage: "{{ rhel9stig_discovered_removable_storage | default([]) + [item.key] }}"
  loop: "{{ ansible_facts['devices'] | dict2items }}"

- name: PRELIM | Gather the package facts after prelim
  ansible.builtin.package_facts:
    manager: auto
  tags:
    - always
